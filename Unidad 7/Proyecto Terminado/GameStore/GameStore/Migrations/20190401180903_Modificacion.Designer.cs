// <auto-generated />
using System;
using GameStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameStore.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20190401180903_Modificacion")]
    partial class Modificacion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameStore.Models.Consola", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<DateTime?>("FechaSalida");

                    b.Property<int>("MarcaId");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50);

                    b.Property<float>("Precio");

                    b.Property<int>("TiendaId");

                    b.HasKey("ID");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TiendaId");

                    b.ToTable("Consolas");
                });

            modelBuilder.Entity("GameStore.Models.Juego", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<DateTime?>("FechaSalida");

                    b.Property<int>("Genero");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.Property<float>("Precio");

                    b.Property<int>("TiendaId");

                    b.HasKey("ID");

                    b.HasIndex("TiendaId");

                    b.ToTable("Juegos");
                });

            modelBuilder.Entity("GameStore.Models.Marca", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("GameStore.Models.Periferico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<DateTime?>("FechaSalida");

                    b.Property<int>("MarcaId");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50);

                    b.Property<float>("Precio");

                    b.Property<int>("TiendaId");

                    b.Property<int>("Tipo");

                    b.HasKey("ID");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TiendaId");

                    b.ToTable("Perifericos");
                });

            modelBuilder.Entity("GameStore.Models.Tienda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Tienda");
                });

            modelBuilder.Entity("GameStore.Models.Consola", b =>
                {
                    b.HasOne("GameStore.Models.Marca", "Marca")
                        .WithMany("Consolas")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GameStore.Models.Tienda", "Tienda")
                        .WithMany("Consolas")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameStore.Models.Juego", b =>
                {
                    b.HasOne("GameStore.Models.Tienda", "Tienda")
                        .WithMany("Juegos")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameStore.Models.Periferico", b =>
                {
                    b.HasOne("GameStore.Models.Marca", "Marca")
                        .WithMany("Perifericos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GameStore.Models.Tienda", "Tienda")
                        .WithMany("Perifericos")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
