// <auto-generated />
using System;
using CIFPACarballeiraWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIFPACarballeiraWeb.Migrations
{
    [DbContext(typeof(CIFPACarballeiraContext))]
    [Migration("20190216184449_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CIFPACarballeiraWeb.Models.Departamento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("CIFPACarballeiraWeb.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<int>("DepartamentoId");

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<DateTime?>("FechaGarantia");

                    b.Property<DateTime?>("FechaRecepcion");

                    b.Property<DateTime?>("FechaRetirada");

                    b.Property<string>("InfoGarantia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(60);

                    b.Property<string>("NumSerie");

                    b.Property<string>("Proveedor");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("TipoMaterial");

                    b.Property<int>("TipoUso");

                    b.Property<int>("UbicacionId");

                    b.HasKey("ID");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("CIFPACarballeiraWeb.Models.Ubicacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("CIFPACarballeiraWeb.Models.Material", b =>
                {
                    b.HasOne("CIFPACarballeiraWeb.Models.Departamento", "Departamento")
                        .WithMany("Materiales")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CIFPACarballeiraWeb.Models.Ubicacion", "Ubicacion")
                        .WithMany("Materiales")
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
